services:
  server:
    image: node:lts
    restart: always
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: node_app
    networks:
      - nginx_network
    ports:
      - 3000:3000
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: api_app
    networks:
      - nginx_network
    ports:
      - 3001:3001
  admin:
    build:
      context: ./admin
      dockerfile: Dockerfile
    container_name: admin_app
    networks:
      - nginx_network
    ports:
      - 8000:8000
  core:
    image: nginx:latest
    restart: always
    build:
      context: ./core
      dockerfile: Dockerfile
    container_name: nginx_app
    depends_on:
      - api
      - admin
      - server
      - mongodb
    volumes:
      - ./core/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - nginx_network
    ports:
      - 80:80
  fluentd:
    image: fluentd:latest
    container_name: fluentd_app
    restart: always
    build:
      context: ./fluentd
      dockerfile: Dockerfile
    depends_on:
      - mongodb
    networks:
      - nginx_network
    ports:
      - "24224:24224"
      - "24224:24224/udp"
    volumes:
      - ./fluentd/fluent.conf:/fluentd/etc/fluent.conf
      - ./log/nginx.log:/nginx.log
  mongodb:
    image: mongo:latest
    container_name: mongo_app
    networks:
      - nginx_network
    ports:
      - 27017:27017
  pipe:
    container_name: pipe_app
    build:
      context: ./pipe
      dockerfile: Dockerfile
    networks:
      - nginx_network
    volumes:
      - ./log/nginx.log:/nginx.log
  model:
    container_name: model_app
    restart: always
    build:
      context: ./guard
      dockerfile: Dockerfile
    networks:
      - nginx_network
    volumes:
      - ./pipe/log_data.xlsx:/log_data.xlsx
  ci:
    container_name: ci_app
    build:
      context: ./ci
      dockerfile: Dockerfile
    networks:
      - nginx_network
    ports:
      - 3002:3002
    volumes:
      - ./guard/output.txt:/var/www/app/output.txt

networks:
  nginx_network:
    driver: bridge

